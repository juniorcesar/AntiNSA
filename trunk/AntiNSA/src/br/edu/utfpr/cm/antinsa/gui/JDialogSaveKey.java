/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.cm.antinsa.gui;

import br.edu.utfpr.cm.antinsa.configuration.GDUtils;
import br.edu.utfpr.cm.antinsa.security.KeyManager;
import br.edu.utfpr.cm.antinsa.security.SSLSocketClient;
import br.edu.utfpr.cm.antinsa.util.Util;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.ConnectException;
import java.security.GeneralSecurityException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author junior
 */
public class JDialogSaveKey extends javax.swing.JDialog {

    private SSLSocketClient socketClient;

    /**
     * Creates new form JDialogSaveKey
     */
    public JDialogSaveKey(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        socketClient = new SSLSocketClient();
        jTextFieldPort.setText(String.valueOf(socketClient.getPort()));
        jLabelLocation.setEnabled(jRadioButtonLocal.isSelected());
        jTextFieldDirectory.setEnabled(jRadioButtonLocal.isSelected());
        jButtonSelect.setEnabled(jRadioButtonLocal.isSelected());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonSmartphone = new javax.swing.JRadioButton();
        jRadioButtonLocal = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabelLocation = new javax.swing.JLabel();
        jTextFieldDirectory = new javax.swing.JTextField();
        jButtonSelect = new javax.swing.JButton();
        jLabelIP = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jLabelPort = new javax.swing.JLabel();
        jTextFieldIP = new javax.swing.JTextField();
        jLabelKeyName = new javax.swing.JLabel();
        jTextFieldKeyName = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setToolTipText("Save key");

        buttonGroup1.add(jRadioButtonSmartphone);
        jRadioButtonSmartphone.setSelected(true);
        jRadioButtonSmartphone.setText("Smartphone");
        jRadioButtonSmartphone.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonSmartphoneStateChanged(evt);
            }
        });

        buttonGroup1.add(jRadioButtonLocal);
        jRadioButtonLocal.setText("Local directory");
        jRadioButtonLocal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonLocalStateChanged(evt);
            }
        });

        jLabel1.setText("Select the local that you want to save the key:");

        jLabelLocation.setText("Location:");

        jTextFieldDirectory.setPreferredSize(new java.awt.Dimension(10, 30));

        jButtonSelect.setText("Select");
        jButtonSelect.setPreferredSize(new java.awt.Dimension(94, 33));
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });

        jLabelIP.setText("IP Address:");

        jTextFieldPort.setEditable(false);
        jTextFieldPort.setPreferredSize(new java.awt.Dimension(84, 30));

        jLabelPort.setText("Port:");

        jTextFieldIP.setPreferredSize(new java.awt.Dimension(84, 30));

        jLabelKeyName.setText("Key name:");

        jTextFieldKeyName.setPreferredSize(new java.awt.Dimension(84, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jRadioButtonSmartphone)
                                .addGap(39, 39, 39)
                                .addComponent(jRadioButtonLocal))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelIP)
                            .addComponent(jLabelLocation)
                            .addComponent(jLabelKeyName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldKeyName, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelPort)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSmartphone)
                    .addComponent(jRadioButtonLocal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLocation))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPort)
                    .addComponent(jTextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIP))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelKeyName)
                    .addComponent(jTextFieldKeyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(150, 150, 150)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(183, Short.MAX_VALUE)))
        );

        jButton1.setText("Close");
        jButton1.setPreferredSize(new java.awt.Dimension(97, 33));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Save");
        jToggleButton1.setPreferredSize(new java.awt.Dimension(97, 33));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(353, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(311, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 9, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 9, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonSmartphoneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonSmartphoneStateChanged
        jLabelIP.setEnabled(jRadioButtonSmartphone.isSelected());
        jTextFieldIP.setEnabled(jRadioButtonSmartphone.isSelected());
        jTextFieldPort.setEnabled(jRadioButtonSmartphone.isSelected());
        jLabelPort.setEnabled(jRadioButtonSmartphone.isSelected());
        jTextFieldKeyName.setEnabled(jRadioButtonSmartphone.isSelected());
        jLabelKeyName.setEnabled(jRadioButtonSmartphone.isSelected());
    }//GEN-LAST:event_jRadioButtonSmartphoneStateChanged

    private void jRadioButtonLocalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonLocalStateChanged
        jLabelLocation.setEnabled(jRadioButtonLocal.isSelected());
        jTextFieldDirectory.setEnabled(jRadioButtonLocal.isSelected());
        jButtonSelect.setEnabled(jRadioButtonLocal.isSelected());
    }//GEN-LAST:event_jRadioButtonLocalStateChanged

    private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed
        JFileChooser folder = new JFileChooser();
        folder.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i = folder.showSaveDialog(null);
        if (i == 1) {
            jTextFieldDirectory.setText("");
        } else {
            String path = folder.getSelectedFile().getAbsolutePath();
            jTextFieldDirectory.setText(path);
        }
    }//GEN-LAST:event_jButtonSelectActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (GDUtils.SECRET_KEY.exists()) {
            if (jRadioButtonLocal.isSelected()) {
                String path = jTextFieldDirectory.getText();

                if ((path != null && !"".equals(path)) && !"/".equals(path)) {
                    boolean copyKey = copyKey(new File(path + "/" + GDUtils.SECRET_KEY.getName()));
                    if (copyKey) {
                        JOptionPane.showMessageDialog(this, "The key was save with successfully!", "Sucessful", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "You need to select the location!", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } else {

                try {
                    if (!"".equals(jTextFieldIP.getText())) {
                        if (jTextFieldKeyName.getText().length() > 5) {
                            SSLSocketClient client = new SSLSocketClient();
                            Util.createPane(this, "Wait ... Establishing communication with the server!");
                            //                            JOptionPane.showMessageDialog(this, "Wait ... Establishing communication with the server!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                            client.connect(jTextFieldIP.getText());
                            client.sendMessage("1");
                            //                            String receiveMessage = client.receiveMessage();
                            client.sendMessage(jTextFieldKeyName.getText());
                            //                            receiveMessage = client.receiveMessage();
                            String key = KeyManager.generateSecretKeyFile();
                            client.sendMessage(key);
                            String receiveMessage = client.receiveMessage();
                            if (!"0".equals(receiveMessage) && !"".equals(receiveMessage)) {
                                JOptionPane.showMessageDialog(this, receiveMessage, "Information", JOptionPane.INFORMATION_MESSAGE);
                                jTextFieldKeyName.setText("");
                            } else {
                                if ("0".equals(receiveMessage)) {
                                      JOptionPane.showMessageDialog(this, "Already exists a key with the name specified!", "Information", JOptionPane.INFORMATION_MESSAGE);
                                } else {
                                    JOptionPane.showMessageDialog(this, "Key not sent", "Warning", JOptionPane.WARNING_MESSAGE);
                                }
                            }
                            client.close();
                        } else {
                            JOptionPane.showMessageDialog(this, "The field key name must have more than 5 characters!", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "You need to insert the IP Address!", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }

                } catch (ConnectException ex) {
                    JOptionPane.showMessageDialog(this, "Unable to connect to the specified server!\n" + ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                } catch (GeneralSecurityException ex) {
                    JOptionPane.showMessageDialog(this, "Unable to connect to the specified server!", "Warning", JOptionPane.WARNING_MESSAGE);
                } catch (FileNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Key not found", "Warning!", JOptionPane.WARNING_MESSAGE);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Unable to connect to the specified server!", "Warning", JOptionPane.WARNING_MESSAGE);
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Unable to connect to the specified server!", "Warning", JOptionPane.WARNING_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Unable to connect to the specified server!", "Warning", JOptionPane.WARNING_MESSAGE);
                }
                //                try {
                //                    if (client.isClosed()) {
                //                        client.close();
                //                    }
                //                } catch (IOException ex) {
                //                    ex.printStackTrace();
                //                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Key not found", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelIP;
    private javax.swing.JLabel jLabelKeyName;
    private javax.swing.JLabel jLabelLocation;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonLocal;
    private javax.swing.JRadioButton jRadioButtonSmartphone;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextFieldDirectory;
    private javax.swing.JTextField jTextFieldIP;
    private javax.swing.JTextField jTextFieldKeyName;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    public boolean copyKey(File newfile) {
        try {
            KeyManager.storeKey(newfile);
            return true;
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (KeyStoreException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NoSuchAlgorithmException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (CertificateException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }
}
